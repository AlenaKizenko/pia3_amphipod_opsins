import os
import re

pia_args = list(filter(
    lambda x: x != 'db' and x != 'in_dir' and x != 'out_dir' and x != 'model' and x != 'outgroup' and x != 'aligner' and
              config[x], config.keys()))
pia_args = list(map(lambda x: f'--{x}', pia_args))

db = config['db']
in_dir = config['in_dir']
out_dir = config['out_dir']
if 'aligner' in config.keys():
    aligner = config['aligner']
else:
    aligner = 'blast'
if 'model' in config.keys():
    model = config['model']
else:
    model = 'TEST'
if 'outgroup' in config.keys():
    outgroup = config['outgroup']
else:
    outgroup = 'file'

refs = {re.sub(r'\.(fasta|fna|fsa_nt|fa)', '', f): re.sub('.*\.', '', f) for f in os.listdir(in_dir) if
        re.search(r'\.(fa|fasta|fna|fsa_nt)$', f)}

rule all:
    input: expand("{out_dir}/{reference}", reference=refs.keys(), out_dir=out_dir),

rule build_initial_tree:
    output: class_al="{out_dir}/class_align.fasta", tree="{out_dir}/class_align.fasta.contree"
    benchmark: "{out_dir}/benchmarks/build_initial_tree.txt"
    conda: "config/opsins.yml"
    log: "{out_dir}/logs/build_initial_tree.txt"
    params: bb=1000, db=db, model=model, nt="AUTO", t="RANDOM"
    message: "Start building initial tree with {threads} threads"
    threads: 8
    shell:
         """
         (mafft --thread {threads} --inputorder --auto {params.db} > {output.class_al}) 2> {log}
         iqtree -s {output.class_al} -nt {params.nt} -t {params.t} -bb {params.bb} -m {params.model} 2>> {log}
         """

rule pia_analysis:
    input: ref=lambda wildcards: f"{in_dir}/{wildcards.reference}.{refs[wildcards.reference]}",
           tree=rules.build_initial_tree.output.tree
    output: ref_out_dir=directory("{out_dir}/{reference}")
    conda: "config/opsins.yml"
    benchmark: "{out_dir}/benchmarks/pia_{reference}.txt"
    log: "{out_dir}/logs/pia_{reference}.txt"
    params: args=' '.join(pia_args), db=db, model=model, outgroup=outgroup, aligner=aligner
    message: "Start PIA analysis with {threads} threads using {input.ref} as reference and {input.tree} as tree"
    threads: 8
    shell:
         """
         python3 PIA3.py -i {input.ref} -o {output.ref_out_dir} -db {params.db} -in_phylo {input.tree} \
         -model {params.model} -outgroup {params.outgroup} -aligner {params.aligner} {params.args} 2> {log}
         """
